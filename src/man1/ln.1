.\" -*- nroff -*-
.\" Copyright Andries Brouwer, Ragnar Hojland Espinosa and A. Wik, 1998.
.\"
.\" This file may be copied under the conditions described
.\" in the LDP GENERAL PUBLIC LICENSE, Version 1, September 1998
.\" that should have been distributed together with this file.
.\"
.\" Дата последней коррекции перевода: 30.11.2003
.\" Перевод с английского выполнил Виктор Вислобоков <corochoone@perm.ru>
.\" http://www.linuxshare.ru/projects/trans/mans.html
.\" Вычитано и скорректировано by alexm@hsys.msk.ru для проекта
.\" http://alexm.here.ru/manpages-ru/
.TH LN 1 1998-11 "GNU fileutils 4.0"
.SH ИМЯ
ln \- создает ссылки между файлами
.SH ОБЗОР
.B ln [опции]
.IB исходный " [" куда ]
.br
.B ln [опции]
.I исходный... каталог
.sp
Опции POSIX:
.B "[\-f] [\-\-]"
.sp
Опции GNU (краткая форма):
.B [\-bdfinsvF]
.BI "[\-S " backup-suffix ]
.B "[\-V {numbered,existing,simple}]"
.B "[\-\-help] [\-\-version] [\-\-]"
.SH ОПИСАНИЕ
В Unix существует два вида ссылок, обычно называемых жесткие ссылки
и символьные, или "мягкие" ссылки. Жесткая ссылка является всего
лишь именем какого-либо файла. (Таким образом, файл может иметь
несколько имен. Он будет удален с диска только тогда, когда будет
удалено последнее из его имен. Количество имен, которые имеет файл,
показывает команда
.BR ls (1).
Нет такого понятия, как настоящее имя: все имена имеют одинаковый
статус. Обычно, но не обязательно, все имена файла находятся на
файловой системе, которая также содержит и его данные.)
.PP
Мягкая ссылка (или символьная ссылка, или symlink) полностью отличается
от жесткой ссылки: она является маленьким специальным файлом, который
содержит путь к файлу. Таким образом, мягкая ссылка может указывать на файлы,
которые находятся на других файловых системах (например,
смонтированных по NFS с другой машины) и не нуждается в наличии
того файла, на который она указывает.
Когда происходит попытка доступа (с помощью системных вызовов
.BR open (2)
или
.BR stat (2)
), ядро операционной системы заменяет ссылку на тот путь, который она
содержит.
(Однако, команда
.BR rm (1)
и системный вызов
.BR unlink (2)
удаляют саму ссылку, а не файл, на который она указывает. Для чтения
состояния символьной ссылки, а также имени файла, на который она
указывает, используются системные вызовы
.BR lstat (2)
и
.BR readlink (2) .
Для других системных вызовов, которые зависят и различаются
для разных операционных систем, может осуществляться работа как
с самой символьной ссылкой, так и с файлом, на который она указывает.)
.PP
.B ln
делает ссылки между файлами. По умолчанию делаются жесткие ссылки;
при указании опции
.B "\-s" ,
делаются символьные (или мягкие) ссылки.
.PP
Если задан только один файл, то для него делается ссылка в текущем
каталоге с таким же именем,
как у этого файла. (Эта возможность является расширением GNU).
В противном случае, если последний аргумент является именем существующего
каталога, то
.B ln
создаст ссылки в этом каталоге для каждого из
.I исходных
файлов, с такими же именами (последний компонент полного имени)
как и у 
.I исходных
файлов.  (Однако, смотрите описание опции
.B "\-\-no\-dereference" ,
данное ниже.) 
В противном случае, если задано два файла, то создается ссылка с
именем
.I куда
для 
.I исходного
файла.
Если последний аргумент не является каталогом и задано более чем
два аргумента, то будет выдаваться сообщение об ошибке.
.PP
По умолчанию
.B ln
не удаляет существующие файлы или существующие символьные ссылки.
(Таким образом, команда
.B ln
может быть использована для целей блокировки: она будет успешно
срабатывать только если
.I куда
уже не существует.)
Однако, можно заставить его удалять файлы и ссылки, указав опцию \-f.
.PP
В существующих реализациях, если команда
.B ln
может создавать жесткую ссылку на каталог, то она может это делать
только от лица суперпользователя. POSIX запрещает системному вызову
.BR link (2)
и утилите
.B ln
создавать жесткие ссылки на каталоги (но не запрещает создавать жесткие
ссылки на файлы, которые находятся на других файловых системах).
.SH "ОПЦИИ POSIX"
.TP
.B "\-f"
Удалять существующие файлы
.IR куда .
.TP
.B "\-\-"
Завершает список опций.
.SH "ОПЦИИ GNU"
.TP
.B "\-d, \-F, \-\-directory"
Позволяет суперпользователю делать жесткие ссылки на каталоги.
.TP
.B "\-f, \-\-force"
Удалять существующие файлы
.IR куда .
.B "\-i, \-\-interactive"
Запрашивать подтверждение удаления файлов
.IR куда .
.TP
.B "\-n, \-\-no\-dereference"
Считать файл
.I куда
обычным файлом, если явно заданный параметр
.I куда
является символьной ссылкой на каталог.

Когда
.I куда
является каталогом, а не символьной ссылкой на него, неоднозначностей
не возникает. Ссылка создается в этом каталоге. Но когда
.I куда
является символьной ссылкой на каталог, то возможны две трактовки
запроса пользователя.
.B ln
может считать
.I dest
обычным каталогом и создавать ссылку внутри него. С другой стороны,
.I dest
может быть рассмотрен не как каталог -- а как собственно ссылка. В
этом случае
.B ln
должна ее удалить или сделать резервную копию перед созданием новой
ссылки. По умолчанию символьная ссылка на каталог считается обычным
каталогом.
.TP
.B "\-s, \-\-symbolic"
Делать символьные ссылки вместо жестких ссылок.  Данная опция будет
вызывать сообщение об ошибке для тех систем, которые не поддерживают
символьные ссылки.
.TP
.B "\-v, \-\-verbose"
Выдавать имя каждого файла перед тем как создавать для него ссылку.
.SH "ОПЦИИ РЕЗЕРВНОГО КОПИРОВАНИЯ GNU"
GNU-версии таких программ как
.BR cp ,
.BR mv ,
.BR ln ,
.B install
и
.B patch 
могут, если потребуется, делать резервные копии файлов, которые будут
перезаписаны, изменены или уничтожены.  При желании, резервные копии
файлов создаются с помощью опции \-b.  Как они будут называться,
задает опция \-V.  В случае, если имя файла резервной копии создается
с помощью добавления суффикса к имени исходного файла, то суффикс
указывается с помощью опции \-S.
.TP
.B "\-b, \-\-backup"
Делать резервные копии файлов, которые будут перезаписаны или удалены.
.TP
.BI "\-S " СУФФИКС ", \-\-suffix=" СУФФИКС
Добавить
.I СУФФИКС
к имени файла при создании его резервной копии.

Если данная опция не задана, то суффикс можно также задать, используя
переменную окружения 
.B SIMPLE_BACKUP_SUFFIX
Если не задана ни опция, ни переменная, то по умолчанию используется
суффикс ~.
.TP
.BI "\-V " МЕТОД ", \-\-version\-control=" МЕТОД
.RS
Определяет, как будут называться резервные копии файлов. Аргумент
.I МЕТОД
может принимать значения numbered (или t), existing (или nil)
и never (или simple). Если данная опция не задана, то будет
использовано значение переменной окружения
.BR VERSION_CONTROL .
Если же не задано значение и этой переменной, то по умолчанию тип
резервного копирования устанавливается в existing.
.PP
Данная опция соответствует переменной version-control в Emacs.
Допустимыми значениями
.IR МЕТОД
являются (допускаются однозначные сокращения):
.TP
.BR t ", " numbered
Всегда делать нумерованные резервные копии файлов.
.TP
.BR nil ", " existing
Делать нумерованные резервные копии файлов для файлов, которые уже их
имеют и простые резервные копии для остальных файлов.
.TP
.BR never ", " simple
Всегда делать простые резервные копии.
.RE

.SH "СТАНДАРТНЫЕ ОПЦИИ GNU"
.TP
.B "\-\-help"
Выдать подсказку на стандартный вывод и успешно завершиться.
.TP
.B "\-\-version"
Выдать информацию о версии на стандартный вывод и успешно завершиться.
.TP
.B "\-\-"
Служит для обозначения конца списка опций.

.SH ОКРУЖЕНИЕ
При работе обычным образом используются значения переменных LANG, LC_ALL, LC_CTYPE и
LC_MESSAGES.
.SH "СОВМЕСТИМОСТЬ"
POSIX 1003.2. Однако, POSIX 1003.2 (1996) не обсуждает мягкие ссылки.
Мягкие ссылки были введены в BSD, и до этого не встречались в
System V версии 3 (и более старых версий).
.SH "СМОТРИТЕ ТАКЖЕ"
.BR ls (1),
.BR rm (1),
.BR link (2),
.BR lstat (2),
.BR open (2),
.BR readlink (2),
.BR stat (2),
.BR unlink (2)
.SH ЗАМЕЧАНИЯ
Данная страница описывает версию
.B ln
из пакета fileutils-4.0;
другие версии могут иметь небольшие отличия.
Исправления и дополнения присылайте по адресу aeb@cwi.nl.
Сообщения об ошибках в этой программе присылайте по адресу
fileutils-bugs@gnu.ai.mit.edu.
.SH ПЕРЕВОД
Перевёл с английского Виктор Вислобоков <corochoone@perm.ru> 2003

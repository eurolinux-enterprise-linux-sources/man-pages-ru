.\"
.\" Copyright (C) 2006 Red Hat, Inc. All Rights Reserved.
.\" Written by David Howells (dhowells@redhat.com)
.\"
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License
.\" as published by the Free Software Foundation; either version
.\" 2 of the License, or (at your option) any later version.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ADD_KEY 2 2010\-02\-25 Linux "Вызовы системы управления ключами Linux"
.SH ИМЯ
add_key \- добавить ключ в систему управления ключами ядра
.SH ОБЗОР
.nf
\fB#include <keyutils.h>\fP
.sp
\fBkey_serial_t add_key(const char *\fP\fItype\fP\fB, const char *\fP\fIdescription\fP\fB,\fP
\fB                     const void *\fP\fIpayload\fP\fB, size_t \fP\fIplen\fP\fB,\fP
\fB                     key_serial_t \fP\fIkeyring\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
\fBadd_key\fP() указывает ядру создать или обновить ключ заданного типа \fItype\fP
с описанием \fIdescription\fP, сконструировать экземпляр с дополнительными
данными \fIpayload\fP и длиной \fIplen\fP, присоединить его к заданной связке
ключей \fIkeyring\fP и вернуть его серийный номер.
.P
В зависимости от типа ключа данные могут быть отклонены, если они
представлены в неправильном формате или возникла другая ошибка.
.P
Если в указываемой связке ключей \fIkeyring\fP уже есть ключ с таким же \fItype\fP
и \fIdescription\fP то, если тип ключа это поддерживает, ключ будет обновлён, а
не создан заново; если нет, то будет создан новый ключ и он вытеснит ссылку
на существующий ключ из связки.
.P
Связка ключей \fIkeyring\fP может задаваться серийным номером действующей
связки ключей, для которой у вызывающего процесса есть права на запись, или
специальным ID связки ключей:
.TP 
\fBKEY_SPEC_THREAD_KEYRING\fP
Задаёт связку ключей нити вызывающего процесса.
.TP 
\fBKEY_SPEC_PROCESS_KEYRING\fP
Задаёт связку ключей процесса.
.TP 
\fBKEY_SPEC_SESSION_KEYRING\fP
Задаёт связку ключей сеанса вызывающего процесса.
.TP 
\fBKEY_SPEC_USER_KEYRING\fP
Задаёт связку ключей по UID вызывающего процесса.
.TP 
\fBKEY_SPEC_USER_SESSION_KEYRING\fP
Задаёт связку ключей по UID сеанса вызывающего процесса.
.SH "ТИПЫ КЛЮЧЕЙ"
В ядре кода управления ключами есть несколько типов; они могут указываться в
этой функции:
.TP 
\fBuser\fP
Ключи определённых пользователем типов могут содержать двоичный набор
произвольных данных, а в \fIdescription\fP можно указывать любую произвольную
строку, хотя предпочтительнее, чтобы описание начиналось со строки,
представляющей службу, для которой предназначен ключ и двоеточие (например,
\fBafs:mykey\fP). Для ключей этого типа значение \fIpayload\fP может быть пустым
или \fBNULL\fP.
.TP 
\fBkeyring\fP
Связки ключей \(em это специальный тип ключей, который может содержать
ссылки на цепочки других ключей любого типа. Если данный интерфейс
используется для создания связки ключей, то \fIpayload\fP должен быть \fBNULL\fP,
а \fIplen\fP \(em ноль.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении \fBadd_key\fP() возвращает серийный номер созданного
или обновлённого ключа. В случае возникновения ошибки возвращается \fB\-1\fP, а
в errno устанавливается значение соответствующей ошибки.
.SH ОШИБКИ
.TP 
\fBENOKEY\fP
Связка ключей не существует.
.TP 
\fBEKEYEXPIRED\fP
Срок службы связки ключей истёк.
.TP 
\fBEKEYREVOKED\fP
Связка ключей отозвана.
.TP 
\fBEINVAL\fP
Неправильные дополнительные данные.
.TP 
\fBENOMEM\fP
Недостаточно памяти для создания ключа.
.TP 
\fBEDQUOT\fP
Квота на ключи для данного пользователя была бы превышена, если бы этот ключ
создался или был бы прицеплен в связку ключей.
.TP 
\fBEACCES\fP
Изменение связки ключей пользователю недоступно.
.SH КОМПОНОВКА
Хотя это и системный вызов Linux, его нет в \fIlibc\fP, но его можно найти в
\fIlibkeyutils\fP. При сборке программы компоновщику нужно указать параметр
\fB\-lkeyutils\fP.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBkeyctl\fP(1), \fBkeyctl\fP(2), \fBrequest_key\fP(2)

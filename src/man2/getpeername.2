.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpeername.2	6.5 (Berkeley) 3/10/91
.\"
.\" Modified Sat Jul 24 16:37:50 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Thu Jul 30 14:37:50 1993 by Martin Schulze <joey@debian.org>
.\" Modified Sun Mar 28 21:26:46 1999 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 17 Jul 2002, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Added 'socket' to NAME, so that "man -k socket" will show this page.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETPEERNAME 2 2008\-12\-03 Linux "Руководство программиста Linux"
.SH ИМЯ
getpeername \- получает имя подключившегося сокета
.SH ОБЗОР
\fB#include <sys/socket.h>\fP
.sp
\fBint getpeername(int \fP\fIsockfd\fP\fB, struct sockaddr *\fP\fIaddr\fP\fB, socklen_t
*\fP\fIaddrlen\fP\fB);\fP
.SH ОПИСАНИЕ
\fBgetpeername\fP() возвращает адрес машины, подключившейся к сокету \fIsockfd\fP,
в буфер, указанный \fIaddr\fP. В параметре \fIaddrlen\fP должно быть указано,
сколько места выделено, на которое указывает \fIaddr\fP. По возвращении он
содержит реальный размер памяти, занимаемый возвращаемым именем (в
байтах). Имя обрезается, если буфер окажется слишком мал.

Возвращаемый адрес урежется, если предоставленный буфер окажется слишком
маленьким; в этом случае в \fIaddrlen\fP будет возвращено значение большее чем
было в вызове.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении возвращается 0. В случае ошибки возвращается \-1, а
\fIerrno\fP устанавливается в соответствующее значение.
.SH ОШИБКИ
.TP 
\fBEBADF\fP
Аргумент \fIsockfd\fP не является допустимым дескриптором.
.TP 
\fBEFAULT\fP
Аргумент \fIaddr\fP указывает на память в недопустимой части адресуемого
пространства процесса.
.TP 
\fBEINVAL\fP
Неправильное значение аргумента \fIaddrlen\fP (например, отрицательное).
.TP 
\fBENOBUFS\fP
Недостаточно ресурсов в системе для выполнения операции.
.TP 
\fBENOTCONN\fP
Сокет не подключён.
.TP 
\fBENOTSOCK\fP
Аргумент \fIsockfd\fP является файлом, а не сокетом.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
SVr4, 4.4BSD (функциональный вызов \fBgetpeername\fP() впервые появился в
4.2BSD), POSIX.1\-2001.
.SH ЗАМЕЧАНИЯ
Третий аргумент функции \fBgetpeername\fP() в действительности имеет тип \fIint
*\fP (это именно так в 4.x BSD, libc4 и libc5). Определенное недопонимание
привело к тому, что в стандарте POSIX появился тип \fIsocklen_t\fP также
используемый в glibc. Смотрите также \fBaccept\fP(2).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBaccept\fP(2), \fBbind\fP(2), \fBgetsockname\fP(2), \fBip\fP(7), \fBsocket\fP(7),
\fBunix\fP(7)

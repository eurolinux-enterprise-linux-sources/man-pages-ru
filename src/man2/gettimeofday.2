.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (michael@moria.de)
.\" Modified 1993-07-23 by Rik Faith (faith@cs.unc.edu)
.\" Modified 1994-08-21 by Michael Chastain (mec@shell.portal.com):
.\"   Fixed necessary '#include' lines.
.\" Modified 1995-04-15 by Michael Chastain (mec@shell.portal.com):
.\"   Added reference to adjtimex.
.\" Removed some nonsense lines pointed out by Urs Thuermann,
.\"   (urs@isnogud.escape.de), aeb, 950722.
.\" Modified 1997-01-14 by Austin Donnelly (and1000@debian.org):
.\"   Added return values section, and bit on EFAULT
.\" Added clarification on timezone, aeb, 971210.
.\" Removed "#include <unistd.h>", aeb, 010316.
.\" Modified, 2004-05-27 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"   Added notes on capability requirement.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETTIMEOFDAY 2 2012\-04\-26 Linux "Руководство программиста Linux"
.SH ИМЯ
gettimeofday, settimeofday \- получает/устанавливает время
.SH ОБЗОР
.nf
\fB#include <sys/time.h>\fP

\fBint gettimeofday(struct timeval *\fP\fItv\fP\fB, struct timezone *\fP\fItz\fP\fB);\fP

\fBint settimeofday(const struct timeval *\fP\fItv\fP\fB, const struct timezone *\fP\fItz\fP\fB);\fP

.fi
.in -4n
Требования макроса тестирования свойств для glibc
(см. \fBfeature_test_macros\fP(7)):
.in
.sp
\fBsettimeofday\fP(): _BSD_SOURCE
.SH ОПИСАНИЕ
Функция \fBgettimeofday\fP() и \fBsettimeofday\fP() позволяют получить и задать
время, а также часовой пояс. Аргумент \fItv\fP имеет тип \fIstruct timeval\fP
(определён в \fI<sys/time.h>\fP):
.sp
.in +4n
.nf
struct timeval {
    time_t      tv_sec;     /* секунды */
    suseconds_t tv_usec;    /* микросекунды */
};
.fi
.in
.sp
и задаёт количество секунд и микросекунд, прошедших с начала эпохи
(см. \fBtime\fP(2)). Аргумент \fItz\fP имеет тип \fIstruct timezone\fP:
.sp
.in +4n
.nf
struct timezone {
    int tz_minuteswest;     /* количество минут западнее Гринвича */
    int tz_dsttime;         /* тип корректировки DST */
};
.fi
.in
.PP
.\" The following is covered under EPERM below:
.\" .PP
.\" Only the superuser may use
.\" .BR settimeofday ().
Если \fItv\fP или \fItz\fP имеют значение NULL, то соответствующая структура не
задана и не будет возвращена (однако при компиляции будут выдаваться
предупреждения, если \fItv\fP равно NULL).
.PP
Пользоваться структурой \fItimezone\fP не рекомендуется; значением аргумента
\fItz\fP в большинстве случаев должен быть NULL (см. ЗАМЕЧАНИЯ далее).

В Linux существует специфическое понятие «временной сдвиг» (warp clock),
связанное с системным вызовом \fBsettimeofday\fP(), который образуется при
самом первом вызове (после загрузки), если аргумент \fItz\fP не равен NULL,
аргумент \fItv\fP равен NULL и поле \fItz_minuteswest\fP не равно нулю (в этом
случае значение поля \fItz_dsttime\fP должно быть равно нулю). В этом случае
предполагается, что время аппаратных часов (CMOS clock) местное и к нему
должен быть добавлен этот параметр для того, чтобы получилось время UTC. Но,
как мы и говорили, использовать этот метод не рекомендуется.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении \fBgettimeofday\fP() и \fBsettimeofday\fP() возвращают 0,
или \-1 в случае ошибки (\fIerrno\fP устанавливается в соответствующее
значение).
.SH ОШИБКИ
.TP 
\fBEFAULT\fP
Одно из значений в \fItv\fP или \fItz\fP находится вне доступного адресного
пространства.
.TP 
\fBEINVAL\fP
Неправильный часовой пояс (или что\-то ещё).
.TP 
\fBEPERM\fP
У вызывающего процесса недостаточно прав для вызова \fBsettimeofday\fP(); в
Linux для этого требуется мандат \fBCAP_SYS_TIME\fP.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
SVr4, 4.3BSD. В POSIX.1\-2001 описан \fBgettimeofday\fP(), но нет
\fBsettimeofday\fP(). В POSIX.1\-2008 вызов \fBgettimeofday\fP() помечен как
устаревший, вместо него рекомендуется использовать \fBclock_gettime\fP(2).
.SH ЗАМЕЧАНИЯ
На время, возвращаемое \fBgettimeofday\fP(2), \fIвлияют\fP скачки в системном
времени (например, если системный администратор вручную изменил системное
время). Если вам требуются однообразно увеличивающееся время, смотрите
\fBclock_gettime\fP(2).

Для работы со структурой \fItimeval\fP существуют макросы, описанные в
\fBtimeradd\fP(3).

Обычно, поля \fIstruct timeval\fP имеют тип \fIlong\fP.

.\" it has not
.\" been and will not be supported by libc or glibc.
.\" Each and every occurrence of this field in the kernel source
.\" (other than the declaration) is a bug.
Поле \fItz_dsttime\fP никогда не использовалось в Linux. Таким образом,
следующий абзац представляет чисто исторический интерес.

В старых системах поле \fItz_dsttime\fP содержит символьную константу (значения
приведены ниже), которая включает в себя информацию о сезонной коррекции
времени (Daylight Saving Time) (замечание: эта величина постоянна и
указывает лишь на алгоритм коррекции). Существующие алгоритмы сезонной
коррекции:
.in +4n
.nf

\fBDST_NONE\fP     /* без коррекции (без DST) */
.br
\fBDST_USA\fP      /* коррекция для США */
.br
\fBDST_AUST\fP     /* коррекция для Австралии */
.br
\fBDST_WET\fP      /* коррекция для Западной Европы */
.br
\fBDST_MET\fP      /* коррекция для Центральной Европы */
.br
\fBDST_EET\fP      /* коррекция для Восточной Европы */
.br
\fBDST_CAN\fP      /* коррекция для Канады */
.br
\fBDST_GB\fP       /* коррекция для Великобритании и Ирландии */
.br
\fBDST_RUM\fP      /* коррекция для Румынии */
.br
\fBDST_TUR\fP      /* коррекция для Турции */
.br
\fBDST_AUSTALT\fP  /* коррекция для Австралии начиная с 1986 года */
.fi
.in
.PP
Разумеется, коррекцию для каждой страны нельзя описать простым алгоритмом,
так как этот фактор может зависеть даже от непредсказуемых политических
решений. Поэтому этот метод представления часовых поясов больше не
используется.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBdate\fP(1), \fBadjtimex\fP(2), \fBclock_gettime\fP(2), \fBtime\fP(2), \fBctime\fP(3),
\fBftime\fP(3), \fBtimeradd\fP(3), \fBcapabilities\fP(7), \fBtime\fP(7)

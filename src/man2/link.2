.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified 1993-07-23 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1994-08-21 by Michael Haardt
.\" Modified 2004-06-23 by Michael Kerrisk <mtk.manpages@gmail.com>
.\" Modified 2005-04-04, as per suggestion by Michael Hardt for rename.2
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LINK 2 2008\-08\-21 Linux "Руководство программиста Linux"
.SH ИМЯ
link \- создаёт ссылку на файл
.SH ОБЗОР
\fB#include <unistd.h>\fP
.sp
\fBint link(const char *\fP\fIoldpath\fP\fB, const char *\fP\fInewpath\fP\fB);\fP
.SH ОПИСАНИЕ
\fBlink\fP() создаёт новую ссылку (также называемую жёсткую ссылку) на
существующий файл.

Если \fInewpath\fP существует, то он \fIне\fP будет перезаписан.

Это новое имя может использоваться как и старое для любых операций; оба
имени ссылаются на один файл (и имеют одинаковые права и владельцев) и
невозможно сказать какое имя считать "изначальным".
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении возвращается 0. В случае ошибки возвращается \-1, а
\fIerrno\fP устанавливается в соответствующее значение.
.SH ОШИБКИ
.TP 
\fBEACCES\fP
Нет прав на запись в каталог, содержащий \fInewpath\fP, или в одном из
каталогов пути до \fIoldpath\fP или \fInewpath\fP не разрешён поиск (см. также
\fBpath_resolution\fP(7)).
.TP 
\fBEEXIST\fP
\fInewpath\fP уже существует.
.TP 
\fBEFAULT\fP
Значения \fIoldpath\fP и \fInewpath\fP указывают за пределы доступного адресного
пространства.
.TP 
\fBEIO\fP
Произошла ошибка ввода\-вывода.
.TP 
\fBELOOP\fP
Во время определения \fIoldpath\fP или \fInewpath\fP встретилось слишком много
символьных ссылок.
.TP 
\fBEMLINK\fP
На файл, на который указывает \fIoldpath\fP, уже создано максимальное
количество ссылок.
.TP 
\fBENAMETOOLONG\fP
Слишком длинное значение аргумента \fIoldpath\fP или \fInewpath\fP.
.TP 
\fBENOENT\fP
Компонент каталога в \fIoldpath\fP или \fInewpath\fP не существует или является
повисшей ссылкой.
.TP 
\fBENOMEM\fP
Недостаточное количество памяти ядра.
.TP 
\fBENOSPC\fP
На устройстве, содержащем файл, нет места для создания нового элемента
каталога.
.TP 
\fBENOTDIR\fP
Компонент, используемый как каталог в \fIoldpath\fP или \fInewpath\fP, на самом
деле не является каталогом.
.TP 
\fBEPERM\fP
\fIoldpath\fP является каталогом.
.TP 
\fBEPERM\fP
Файловая система, содержащая \fIoldpath\fP и \fInewpath\fP, не поддерживает
создание жёстких ссылок.
.TP 
\fBEROFS\fP
Файл расположен в файловой системе, доступной только на чтение.
.TP 
\fBEXDEV\fP
\fIoldpath\fP и \fInewpath\fP находятся не в одной смонтированной файловой
системе. (Linux позволяет монтировать файловую систему в несколько точек, но
\fBlink\fP() не работает с отличающими точками монтирования, даже если в них
смонтирована идентичная файловая система.)
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
.\" SVr4 documents additional ENOLINK and
.\" EMULTIHOP error conditions; POSIX.1 does not document ELOOP.
.\" X/OPEN does not document EFAULT, ENOMEM or EIO.
SVr4, 4.3BSD, POSIX.1\-2001 (но см. ЗАМЕЧАНИЯ).
.SH ЗАМЕЧАНИЯ
Жёсткие ссылки, создаваемые \fBlink\fP(), не могут располагаться в разных
файловых системах. Если это необходимо, используйте \fBsymlink\fP(2).

.\" more precisely: since kernel 1.3.56
.\" For example, the default Solaris compilation environment
.\" behaves like Linux, and contributors to a March 2005
.\" thread in the Austin mailing list reported that some
.\" other (System V) implementations did/do the same -- MTK, Apr 05
В POSIX.1\-2001 сказано, что \fBlink\fP() должен разъименовывать \fIoldpath\fP,
если он является символьной ссылкой. Однако, начиная с ядра версии 2.0,
Linux также не поступает: если \fIoldpath\fP является символьной ссылкой, то
\fInewpath\fP создаётся как (жёсткая) ссылка на файл этой символьной ссылки
(т.е., \fInewpath\fP становится символьной ссылкой на файл, содержащий ссылку
на \fIoldpath\fP). Некоторые другие реализации поступают также как Linux. В
POSIX.1\-2008 изменено описание \fBlink\fP(), теперь разъименовывание символьной
ссылки \fIoldpath\fP зависит от реализации. Для точного управления по обработке
символьных ссылок при создании см. \fBlinkat\fP(2).
.SH ДЕФЕКТЫ
В файловых системах NFS возвращаемый код может быть неправильным, если
сервер NFS выполнит создание ссылки и завершит работу до возврата результата
операции. Используйте \fBstat\fP(2), чтобы выяснить была ли создана ссылка.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBln\fP(1), \fBlinkat\fP(2), \fBopen\fP(2), \fBrename\fP(2), \fBstat\fP(2), \fBsymlink\fP(2),
\fBunlink\fP(2), \fBpath_resolution\fP(7), \fBsymlink\fP(7)

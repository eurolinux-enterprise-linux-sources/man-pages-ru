.\" Copyright 1993 Giorgio Ciucci <giorgio@crcc.it>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Tue Oct 22 16:40:11 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Mon Jul 10 21:09:59 2000 by aeb
.\" Modified 1 Jun 2002, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Language clean-ups.
.\"	Enhanced and corrected information on msg_qbytes, MSGMNB and MSGMAX
.\"	Added note on restart behavior of msgsnd() and msgrcv()
.\"	Formatting clean-ups (argument and field names marked as .I
.\"		instead of .B)
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capability requirements
.\" Modified, 11 Nov 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Language and formatting clean-ups
.\"	Added notes on /proc files
.\" FIXME . Add example programs to this page.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MSGOP 2 2012\-05\-31 Linux "Руководство программиста Linux"
.SH ИМЯ
msgrcv, msgsnd \- операции с сообщениями
.SH ОБЗОР
.nf
\fB#include <sys/types.h>\fP
\fB#include <sys/ipc.h>\fP
\fB#include <sys/msg.h>\fP
.sp
\fBint msgsnd(int \fP\fImsqid\fP\fB, const void *\fP\fImsgp\fP\fB, size_t \fP\fImsgsz\fP\fB, int \fP\fImsgflg\fP\fB);\fP
.sp
\fBssize_t msgrcv(int \fP\fImsqid\fP\fB, void *\fP\fImsgp\fP\fB, size_t \fP\fImsgsz\fP\fB, long \fP\fImsgtyp\fP\fB,\fP
\fB               int \fP\fImsgflg\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
Системные вызовы \fBmsgsnd\fP() и \fBmsgrcv\fP() используются для отправки и
получения сообщений из очереди. Вызывающий процесс должен иметь права на
запись в очередь сообщений, чтобы отправлять сообщения и права на чтение для
получения сообщений.
.PP
Аргумент \fImsgp\fP представляет собой указатель на структуру, определяемую
вызывающим как:
.in +4n
.nf

struct msgbuf {
    long mtype;       /* тип сообщения, значение должно быть > 0 */
    char mtext[1];    /* данные сообщения */
};
.fi
.in
.PP
Поле \fImtext\fP является массивом (или другой структурой), размер которого
определяется \fImsgsz\fP \(em неотрицательным целым значением. Разрешены
сообщения нулевой длины (т.е. без поля \fImtext\fP). Поле \fImtype\fP должно быть
только положительным целым значением. Это значение используется
процессом\-получателем для выбора сообщения (см. описание \fBmsgrcv\fP() далее).
.SS msgsnd()
Системный вызов \fBmsgsnd\fP() добавляет копию сообщения, указанного \fImsgp\fP, в
очередь сообщений, идентификатор которой задаётся в \fImsqid\fP.
.PP
Если в очереди достаточно места, то \fBmsgsnd\fP() немедленно сообщает о
нормальном завершении работы (размер очереди определяется полем
\fImsg_qbytes\fP в связанной с очередью сообщений структуре данных. Во время
создания очереди это поле инициализируется \fBMSGMNB\fP байтами, но это
ограничение может быть изменено с помощью \fBmsgctl\fP(2)). Если в очереди
недостаточно пространства, то вызов \fBmsgsnd\fP() блокируется до тех пор, пока
не появится достаточно места. Если в \fImsgflg\fP указан флаг \fBIPC_NOWAIT\fP, то
вызов вместо этого выдаст ошибку \fBEAGAIN\fP.

Заблокированный вызов \fBmsgsnd\fP() может завершиться ошибкой если:
.IP * 2
очередь удалена (в этом случае системный вызов выдаст ошибку, определив
\fIerrno\fP в значение \fBEIDRM\fP;
.IP *
пойман сигнал; в этом случае системный вызов завершается с ошибкой и
присваивает \fIerrno\fP значение \fBEINTR\fP; \fBсм.\fP \fBsignal\fP(7). Вызов
\fBmsgsnd\fP() никогда не перезапускается автоматически после прерывания
обработчиком сигнала, независимо от установки флага \fBSA_RESTART\fP при
настройке обработчика сигнала.
.PP
Перед успешным завершением структура данных очереди сообщений будет
обновлена следующим образом:
.IP
Значение \fImsg_lspid\fP устанавливается равным идентификатору вызывающего
процесса.
.IP
Значение \fImsg_qnum\fP увеличивается на 1.
.IP
Значение \fImsg_stime\fP присваивается значение текущего времени.
.SS msgrcv()
Системный вызов \fBmsgrcv\fP() удаляет сообщение из очереди, указанной в
\fImsqid\fP и помещает его в буфер, указанный в \fImsgp\fP.
.PP
Параметр \fImsgsz\fP задаёт максимальный размер (в байтах) элемента \fImtext\fP
структуры, находящейся по адресу, указанному в аргументе \fImsgp\fP. Если длина
текста сообщения больше чем \fImsgsz\fP, то поведение зависит от наличия флага
\fBMSG_NOERROR\fP в \fImsgflg\fP. Если \fBMSG_NOERROR\fP указан, то текст сообщения
будет урезан (а урезанная часть потеряна); иначе сообщение не удаляется из
очереди, а системный вызов возвращает \-1 и присваивает \fIerrno\fP значение
\fBE2BIG\fP.
.PP
В параметре \fImsgtyp\fP задаётся тип сообщения:
.IP * 2
Если \fImsgtyp\fP равно нулю, то читается первое сообщение в очереди.
.IP *
Если \fImsgtyp\fP больше нуля, то из очереди читается первое сообщение с типом
\fImsgtyp\fP (если только в \fImsgflg\fP не указан \fBMSG_EXCEPT\fP. В этом случае из
очереди читается первое сообщение, тип которого не равен \fImsgtyp\fP).
.IP *
Если \fImsgtyp\fP меньше нуля, то из очереди читается первое сообщение со
значением, меньшим или равным абсолютному значению \fImsgtyp\fP.
.PP
Аргумент \fImsgflg\fP представляет собой битовую маску из комбинации нуля или
более следующих флагов:
.TP 
\fBIPC_NOWAIT\fP
Немедленный возврат, если в очереди нет сообщений необходимого типа. При
этом системный вызов возвращает ошибку, присваивая \fIerrno\fP значение
\fBENOMSG\fP.
.TP 
\fBMSG_EXCEPT\fP
Используется, если \fImsgtyp\fP больше 0, для чтения первого сообщения в
очереди с типом, отличным от \fImsgtyp\fP.
.TP 
\fBMSG_NOERROR\fP
Используется для урезания текста сообщения, если его размер больше \fImsgsz\fP
байт.
.PP
Если в очереди нет сообщения необходимого типа и в \fImsgflg\fP не указан
\fBIPC_NOWAIT\fP, то вызывающий процесс будет заблокирован до тех пор, пока не
произойдет одно из следующих событий:
.IP * 2
В очередь не будет помещено сообщение необходимого типа.
.IP *
Очередь сообщений удалена из системы. В этом случае системный вызов
возвращает ошибку и присваивает \fIerrno\fP значение \fBEIDRM\fP.
.IP *
Вызывающий процесс не получит сигнал, который должен обработать. В этом
случае системный вызов возвращает ошибку и присваивает переменной \fIerrno\fP
значение \fBEINTR\fP. Вызов \fBmsgrcv\fP() никогда не перезапускается
автоматически после прерывания обработчиком сигнала, независимо от установки
флага \fBSA_RESTART\fP при настройке обработчика сигнала.
.PP
Перед успешным завершением структура данных очереди сообщений будет
обновлена следующим образом:
.IP
Значение \fImsg_lrpid\fP устанавливается равным идентификатору вызывающего
процесса.
.IP
Значение \fImsg_qnum\fP уменьшается на 1.
.IP
Значение \fImsg_rtime\fP становится равным текущему времени.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При ошибке оба вызова возвращают \-1, а переменная \fIerrno\fP приобретает
соответствующее значение. В противном случае \fBmsgsnd\fP() возвращает 0, а
\fBmsgrcv\fP() возвращает количество байтов, скопированных в массив \fImtext\fP.
.SH ОШИБКИ
Значения \fIerrno\fP, устанавливаемые при возникновении ошибок в \fBmsgsnd\fP():
.TP 
\fBEACCES\fP
Вызывающий процесс не имеет прав записи в очередь сообщений и не имеет
мандата \fBCAP_IPC_OWNER\fP.
.TP 
\fBEAGAIN\fP
Сообщение не может быть отправлено, так как размер очереди превысит лимит,
равный \fImsg_qbytes\fP, а в параметре \fImsgflg\fP установлен флаг \fBIPC_NOWAIT\fP.
.TP 
\fBEFAULT\fP
Память с адресом, указанным \fImsgp\fP, недоступна.
.TP 
\fBEIDRM\fP
Очередь сообщений была удалена.
.TP 
\fBEINTR\fP
Процесс ждал свободного места в очереди и получил сигнал, который должен
обработать.
.TP 
\fBEINVAL\fP
Задано неправильное значение \fImsqid\fP, не положительное значение \fImtype\fP
или неправильное значение \fImsgsz\fP (меньше 0, или больше системного лимита,
заданного \fBMSGMAX\fP).
.TP 
\fBENOMEM\fP
Недостаточно памяти в системе для копирования сообщения, указанного \fImsgp\fP.
.PP
Значения \fIerrno\fP, устанавливаемые при возникновении ошибок в \fBmsgrcv\fP():
.TP 
\fBE2BIG\fP
Длина текста получаемого сообщения больше, чем \fImsgsz\fP, а в поле \fImsgflg\fP
не установлен флаг \fBMSG_NOERROR\fP.
.TP 
\fBEACCES\fP
Вызывающий процесс не имеет прав на чтение очереди сообщений и не имеет
мандата \fBCAP_IPC_OWNER\fP.
.TP 
\fBEAGAIN\fP
Нет сообщения в очереди, а в \fImsgflg\fP указан флаг \fBIPC_NOWAIT\fP.
.TP 
\fBEFAULT\fP
Память с адресом, указанным \fImsgp\fP, недоступна.
.TP 
\fBEIDRM\fP
Процесс ждал приёма сообщения, и в это время очередь сообщений была удалена.
.TP 
\fBEINTR\fP
Во время ожидания приёма сообщения процесс получил сигнал; см. \fBsignal\fP(7).
.TP 
\fBEINVAL\fP
Неверное значение \fImsgqid\fP или \fImsgsz\fP меньше 0.
.TP 
\fBENOMSG\fP
В очереди нет сообщения необходимого типа, а в параметре \fImsgflg\fP
установлен флаг \fBIPC_NOWAIT\fP.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
SVr4, POSIX.1\-2001.
.SH ЗАМЕЧАНИЯ
.\" Like Linux, the FreeBSD man pages still document
.\" the inclusion of these header files.
Включение файлов \fI<sys/types.h>\fP и \fI<sys/ipc.h>\fP не
требуется в Linux или любых версий POSIX. Однако, некоторые старые
реализации требуют включения данных заголовочных файлов, и это также
требуется по SVID. В приложениях, которые нужно перенести на такие старые
системы, может потребоваться включить данных заголовочные файлы.

Аргумент \fImsgp\fP в libc4, libc5, glibc 2.0, glibc 2.1 объявлен как \fIstruct
msgbuf *\fP. В glibc 2.2, в соответствии с SUSv2 и SUSv3, он объявлен как
\fIvoid *\fP.

На работу системного вызова \fBmsgsnd\fP() влияют следующие системные
ограничения на ресурсы очереди сообщений:
.TP 
\fBMSGMAX\fP
Максимальный размер текста сообщения: по умолчанию он равен 8192 байтам (в
Linux это ограничение можно прочитать и изменить через
\fI/proc/sys/kernel/msgmax\fP).
.TP 
\fBMSGMNB\fP
Максимальный размер по умолчанию очереди сообщений: 16384 байта (в Linux это
ограничение можно прочитать и изменить через
\fI/proc/sys/kernel/msgmnb\fP). Суперпользователь может устанавливать больший
размер очереди сообщений, чем \fBMSGMNB\fP при помощи системного вызова
\fBmsgctl\fP(2).
.PP
Реализация не накладывает существенных ограничений на максимальное
количество заголовков сообщений (\fBMSGTQL\fP) и на максимальный размер в
байтах пула сообщений (\fBMSGPOOL\fP).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBmsgctl\fP(2), \fBmsgget\fP(2), \fBcapabilities\fP(7), \fBmq_overview\fP(7),
\fBsvipc\fP(7)

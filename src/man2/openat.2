.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 2006, Michael Kerrisk
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH OPENAT 2 2012\-05\-04 Linux "Руководство программиста Linux"
.SH ИМЯ
openat \- открывает файл, определяемый относительно файлового дескриптора
каталога
.SH ОБЗОР
.nf
\fB#include <fcntl.h>\fP
.sp
\fBint openat(int \fP\fIdirfd\fP\fB, const char *\fP\fIpathname\fP\fB, int \fP\fIflags\fP\fB);\fP
\fBint openat(int \fP\fIdirfd\fP\fB, const char *\fP\fIpathname\fP\fB, int \fP\fIflags\fP\fB, mode_t \fP\fImode\fP\fB);\fP
.fi
.sp
.in -4n
Требования макроса тестирования свойств для glibc
(см. \fBfeature_test_macros\fP(7)):
.in
.sp
\fBopenat\fP():
.PD 0
.ad l
.RS 4
.TP  4
Начиная с glibc 2.10:
_XOPEN_SOURCE\ >=\ 700 || _POSIX_C_SOURCE\ >=\ 200809L
.TP 
До glibc 2.10:
_ATFILE_SOURCE
.RE
.ad
.PD
.SH ОПИСАНИЕ
Системный вызов \fBopenat\fP() работает также как системный вызов \fBopen\fP(2),
за исключением случаев, описанных в данной справочной странице.

Если в \fIpathname\fP задан относительный путь, то он считается относительно
каталога, на который ссылается файловый дескриптор \fIdirfd\fP (а не
относительно текущего рабочего каталога вызывающего процесса, как это
делается в \fBopen\fP(2)).

Если в \fIpathname\fP задан относительный путь и \fIdirfd\fP равно специальному
значению \fBAT_FDCWD\fP, то \fIpathname\fP рассматривается относительно текущего
рабочего каталога вызывающего процесса (как \fBopen\fP(2)).

Если в \fIpathname\fP задан абсолютный путь, то \fIdirfd\fP игнорируется.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении \fBopenat\fP() возвращает новый файловый
дескриптор. При ошибке возвращается \-1, и \fIerrno\fP устанавливается в
соответствующее значение.
.SH ОШИБКИ
В \fBopenat\fP() могут возникнуть те же ошибки, что и в \fBopen\fP(2). Также, в
\fBopenat\fP() могут возникнуть следующие ошибки:
.TP 
\fBEBADF\fP
\fIdirfd\fP не является правильным файловым дескриптором.
.TP 
\fBENOTDIR\fP
Значение \fIpathname\fP содержит относительный путь и \fIdirfd\fP содержит
файловый дескриптор, указывающий на файл, а не на каталог.
.SH ВЕРСИИ
Вызов \fBopenat\fP() был добавлен в ядро Linux версии 2.6.16; поддержка в glibc
доступна с версии 2.4.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
.\" The 'at' suffix in Solaris is actually double sensed.  It
.\" primarily referred to "extended *at*tributes", which are
.\" handled by Solaris' O_XATTR flag, but was also intended
.\" to refer to the notion of "at a relative location".
.\"
.\" See the following for a discussion of the inconsistent
.\" naming of the *at() functions:
.\" http://www.opengroup.org/austin/mailarchives/ag/msg09103.html
.\" Subject: 	RE: The naming of at()s is a difficult matter
.\" From: 	Don Cragun
.\" Date: 	Tue, 14 Feb 2006 14:56:50 -0800 (PST)
.\"
POSIX.1\-2008. Подобный системный вызов есть в Solaris.
.SH ЗАМЕЧАНИЯ
Вызов \fBopenat\fP() и другие подобные системные вызовы с суффиксом «at»
поддерживаются по двум причинам.

Во\-первых, \fBopenat\fP() позволяет приложению избежать условий
состязательности, которые могут возникнуть, когда \fBopen\fP(2) открывает файлы
в каталогах, отличных от текущего. Состязательность возникает из\-за того,
что один из компонентов префикса каталога, указанного \fBopen\fP(2), может
измениться одновременно с вызовом \fBopen\fP(2). Этой состязательности можно
избежать открыв файловый дескриптор каталога назначения, и затем указав этот
файловый дескриптор в аргументе \fIdirfd\fP вызова \fBopenat\fP().

Во\-вторых, \fBopenat\fP() позволяет реализовать отдельный «текущий рабочий
каталог» для каждой нити посредством файлового дескриптора, сопровождаемого
приложением. Эта возможность также может быть получена с использованием
\fI/proc/self/fd/\fPdirfd, но менее эффективно.)
.SH "СМОТРИТЕ ТАКЖЕ"
\fBfaccessat\fP(2), \fBfchmodat\fP(2), \fBfchownat\fP(2), \fBfstatat\fP(2),
\fBfutimesat\fP(2), \fBlinkat\fP(2), \fBmkdirat\fP(2), \fBmknodat\fP(2), \fBopen\fP(2),
\fBreadlinkat\fP(2), \fBrenameat\fP(2), \fBsymlinkat\fP(2), \fBunlinkat\fP(2),
\fButimensat\fP(2), \fBmkfifoat\fP(3), \fBpath_resolution\fP(7)

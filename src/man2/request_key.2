.\"
.\" Copyright (C) 2006 Red Hat, Inc. All Rights Reserved.
.\" Written by David Howells (dhowells@redhat.com)
.\"
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License
.\" as published by the Free Software Foundation; either version
.\" 2 of the License, or (at your option) any later version.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH REQUEST_KEY 2 2010\-02\-25 Linux "Вызовы системы управления ключами Linux"
.SH ИМЯ
request_key \- запрашивает ключ из системы управления ключами ядра
.SH ОБЗОР
.nf
\fB#include <keyutils.h>\fP
.sp
\fBkey_serial_t request_key(const char *\fP\fItype\fP\fB, const char *\fP\fIdescription\fP\fB,\fP
\fB                         const char *\fP\fIcallout_info\fP\fB,\fP
\fB                         key_serial_t \fP\fIkeyring\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
\fBrequest_key\fP() подает запрос ядру на поиск ключа заданного \fItype\fP,
который соответствует указанному описанию \fIdescription\fP и, если поиск
успешен, присоединяет его к указанному \fIkeyring\fP и возвращает его серийный
номер.
.P
Вызов \fBrequest_key\fP() выполняет рекурсивный поиск ключа во всех связках
ключей в следующем порядке: связки каждой нити, присоединённые к вызвавшему
процессу, связки, относящиеся к процессу и связки ключей сеанса.
.P
Если \fBrequest_key\fP() вызван из программы, вызвавшей \fBrequest_key\fP() от
имени какого\-то другого процесс для генерации ключа, то в дальнейшем будет
осуществлён поиск по связкам ключей этого другого процесса, используя его
UID, GID, группы и контекст безопасности для контроля доступа.
.P
Ключи в каждой связке ищутся и проверяются на совпадение до рекурсивного
перехода в дочерние связки. Найдены могут быть только те ключи, которые
доступны вызывающему для \fBпоиска\fP, и поиск может осуществляться только в
доступных для \fBпоиска\fP связках ключей.
.P
Если ключ не найден, то, если задан \fIcallout_info\fP, эта функция попытается
осуществить дальнейший поиск. В этом случае \fIcallout_info\fP передаётся
службе из пространства пользователя, такой как \fB/sbin/request\-key\fP, для
генерации ключа.
.P
Если и она завершилась неудачно, то возвращается ошибка, и временный
отрицательный ключ будет установлен в назначенную \fIkeyring\fP. Он утратит
силу через несколько секунд, но пока существует, все последующие вызовы
\fBrequest_key\fP() будут приводить к ошибке.
.P
Серийный номер \fIkeyring\fP может задаваться действующей связкой ключей, на
которую вызывающий имеет право на запись, или может быть задан специальным
ID связки ключей:
.TP 
\fBKEY_SPEC_THREAD_KEYRING\fP
Задаёт связку ключей нити вызывающего процесса.
.TP 
\fBKEY_SPEC_PROCESS_KEYRING\fP
Задаёт связку ключей процесса.
.TP 
\fBKEY_SPEC_SESSION_KEYRING\fP
Задаёт связку ключей сеанса вызывающего процесса.
.TP 
\fBKEY_SPEC_USER_KEYRING\fP
Задаёт связку ключей по UID вызывающего процесса.
.TP 
\fBKEY_SPEC_USER_SESSION_KEYRING\fP
Задаёт связку ключей по UID сеанса вызывающего процесса.
.P
Если ключ создан, то неважно рабочий он или отрицательный, он будет
вытеснять любой другой ключ с тем же типом и описанием из указанной
\fIkeyring\fP.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении возвращается \fBrequest_key\fP() возвращает серийный
номер найденного ключа. В случае ошибки возвращается значение \fB\-1\fP, а в
errno устанавливается код соответствующей ошибки.
.SH ОШИБКИ
.TP 
\fBEACCES\fP
Изменение связки ключей пользователю недоступно.
.TP 
\fBEINTR\fP
Запрос был прерван сигналом.
.TP 
\fBEDQUOT\fP
Квота на ключи для данного пользователя была бы превышена, если бы этот ключ
создался или был бы прицеплен в связку ключей.
.TP 
\fBEKEYEXPIRED\fP
Найден просроченный ключ, и замена не может быть получена.
.TP 
\fBEKEYREJECTED\fP
Попытка генерации нового ключа была отвергнута.
.TP 
\fBEKEYREVOKED\fP
Найден отозванный ключ, и замена не может быть получена.
.TP 
\fBENOMEM\fP
Недостаточно памяти для создания ключа.
.TP 
\fBENOKEY\fP
Искомый ключ не найден.
.SH КОМПОНОВКА
Хотя это и системный вызов Linux, его нет в \fIlibc\fP, но его можно найти в
\fIlibkeyutils\fP. При сборке программы компоновщику нужно указать параметр
\fB\-lkeyutils\fP.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBkeyctl\fP(1), \fBadd_key\fP(2), \fBkeyctl\fP(2), \fBrequest\-key\fP(8)

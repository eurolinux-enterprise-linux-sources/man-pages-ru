.\" Copyright (C) 2004 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SET_TID_ADDRESS 2 2004\-09\-10 Linux "Руководство программиста Linux"
.SH ИМЯ
set_tid_address \- устанавливает указатель идентификатора нити
.SH ОБЗОР
.nf
\fB#include <linux/unistd.h>\fP
.sp
\fBlong set_tid_address(int *\fP\fItidptr\fP\fB);\fP
.fi
.SH ОПИСАНИЕ
В ядре для каждого процесса хранятся два значения: \fIset_child_tid\fP и
\fIclear_child_tid\fP, которые по умолчанию равны NULL.
.SS set_child_tid
Если процесс запущен с помощью \fBclone\fP(2) с флагом \fBCLONE_CHILD_SETTID\fP,
то значение \fIset_child_tid\fP устанавливается равным \fIchild_tidptr\fP, пятому
аргументу системного вызова \fBclone\fP(2).
.LP
Если \fIset_child_tid\fP присвоено значение, то самое первое действие, которое
выполняется для нового процесса, это запись его PID по этому адресу.
.SS clear_child_tid
Если процесс запущен с помощью \fBclone\fP(2) с флагом \fBCLONE_CHILD_CLEARTID\fP,
то значение \fIclear_child_tid\fP устанавливается равным \fIchild_tidptr\fP,
пятому аргументу системного вызова \fBclone\fP(2).
.LP
Системный вызов \fBset_tid_address\fP() устанавливает у вызывающего процесса
значение \fIclear_child_tid\fP равным \fItidptr\fP.
.LP
Если \fIclear_child_tid\fP присвоено значение, то при завершении работы
процесса (и если он использовал общую с другими процессами или нитями
память) по этому адресу записывается 0 и выполняется вызов
\fIfutex(child_tidptr, FUTEX_WAKE, 1, NULL, NULL, 0);\fP (то есть, пробуждается
один процесс, ожидающий этот futex). Ошибки игнорируются.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
Вызов \fBset_tid_address\fP() всегда возвращает PID вызывающего процесса.
.SH ОШИБКИ
Вызов \fBset_tid_address\fP() всегда завершается без ошибок.
.SH ВЕРСИИ
Данный вызов появился в Linux 2.5.48. Представленное здесь описание
соответствует вызову, начиная с Linux 2.5.49.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
Данный вызов есть только в Linux.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBclone\fP(2), \fBfutex\fP(2)

.\" Copyright (c) 1993 Luigi P. Bai (lpb@softint.com) July 28, 1993
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 28 10:57:35 1993, Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Nov 28 16:43:30 1993, Rik Faith <faith@cs.unc.edu>
.\"          with material from Giorgio Ciucci <giorgio@crcc.it>
.\" Portions Copyright 1993 Giorgio Ciucci <giorgio@crcc.it>
.\" Modified Tue Oct 22 22:03:17 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified, 8 Jan 2003, Michael Kerrisk, <mtk.manpages@gmail.com>
.\"	Removed EIDRM from errors - that can't happen...
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capability requirements
.\" Modified, 11 Nov 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Language and formatting clean-ups
.\"	Added notes on /proc files
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SHMGET 2 2012\-05\-31 Linux "Руководство программиста Linux"
.SH ИМЯ
shmget \- выделяет общий сегмент памяти
.SH ОБЗОР
.ad l
\fB#include <sys/ipc.h>\fP
.br
\fB#include <sys/shm.h>\fP
.sp
\fBint shmget(key_t \fP\fIkey\fP\fB, size_t \fP\fIsize\fP\fB, int \fP\fIshmflg\fP\fB);\fP
.ad b
.SH ОПИСАНИЕ
Вызов \fBshmget\fP() возвращает идентификатор общего сегмента памяти,
соответствующего значению аргумента \fIkey\fP. Если значение \fIkey\fP равно
\fBIPC_PRIVATE\fP или если \fIkey\fP не равно \fBIPC_PRIVATE\fP, но не существует
общего сегмента памяти, который бы соответствовал значению \fIkey\fP и в
\fIshmflg\fP есть флаг \fBIPC_CREAT\fP, то создаётся новый общий сегмент памяти
размером \fIsize\fP, округлённым до значения, кратного \fBPAGE_SIZE\fP.
.PP
Если в \fIshmflg\fP одновременно указаны \fBIPC_CREAT\fP и \fBIPC_EXCL\fP и для
значения \fIkey\fP уже существует общий сегмент памяти, то вызов \fBshmget\fP()
завершается с ошибкой и \fIerrno\fP присваивается \fBEEXIST\fP (такой же результат
как с \fBO_CREAT | O_EXCL\fP у \fBopen\fP(2)).
.PP
Значение \fIshmflg\fP составляется из следующих флагов:
.TP  12
\fBIPC_CREAT\fP
Служит для создания нового сегмента. Если этого флага нет, то вызов
\fBshmget\fP() будет искать сегмент, соответствующий \fIkey\fP, и затем проверит,
имеет ли пользователь права на доступ к сегменту.
.TP 
\fBIPC_EXCL\fP
Используется совместно с \fBIPC_CREAT\fP для того, чтобы отказаться от создания
при наличии сегмента.
.TP 
\fImode_flags\fP
В младших 9 битах задаются права для владельца, группы и всех
остальных. Формат значения совпадает с аргументом \fImode\fP вызова
\fBopen\fP(2). В данный момент бит выполнения системой не используются.
.TP 
\fBSHM_HUGETLB\fP (начиная с Linux 2.6)
Выделять сегмент используя «огромные страницы». Дополнительную информацию
смотрите в файле исходного кода ядра \fIDocumentation/vm/hugetlbpage.txt\fP.
.TP 
\fBSHM_NORESERVE\fP (начиная с Linux 2.6.15)
.\" As at 2.6.17-rc2, this flag has no effect if SHM_HUGETLB was also
.\" specified.
Этот флаг нужен для того же, что и флаг \fBMAP_NORESERVE\fP у \fBmmap\fP(2). Он
указывает не резервировать место в пространстве подкачки для этого
сегмента. Операцией резервирования места в пространстве подкачки
гарантируется, что сегмент можно изменить. Если место не резервировать, то
при записи можно получить сигнал \fBSIGSEGV\fP, если кончится физическая
память. Смотрите также обсуждение файла \fI/proc/sys/vm/overcommit_memory\fP в
\fBproc\fP(5).
.PP
Если создаётся новый общий сегмент памяти, то его содержимое
инициализируется нулями, а соответствующая ему структура данных \fIshmid_ds\fP
(см. \fBshmctl\fP(2)) следующим образом:
.IP
Полям \fIshm_perm.cuid\fP и \fIshm_perm.uid\fP присваиваются значения эффективного
идентификатора пользователя вызывающего процесса.
.IP
Полям \fIshm_perm.cgid\fP и \fIshm_perm.gid\fP присваиваются значения эффективного
идентификатора группы вызывающего процесса.
.IP
Младшим 9 битам \fIshm_perm.mode\fP присваивается значение младших 9 бит
\fIshmflg\fP.
.IP
Полю \fIshm_segsz\fP присваивается значение \fIsize\fP.
.IP
Полям \fIshm_lpid\fP, \fIshm_nattch\fP, \fIshm_atime\fP и \fIshm_dtime\fP присваивается
0.
.IP
Полю \fIshm_ctime\fP присваивается значение текущего времени.
.PP
Если общий сегмент памяти уже существует, то проверяются права доступа к
нему и не помечен ли он для удаления.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При успешном выполнении возвращается корректный идентификатор сегмента
\fIshmid\fP и \-1 в случае ошибки.
.SH ОШИБКИ
В случае возникновения ошибки \fIerrno\fP может принимать следующие значения:
.TP 
\fBEACCES\fP
Пользователь не имеет прав доступа к общему сегменту памяти и не имеет
мандата \fBCAP_IPC_OWNER\fP.
.TP 
\fBEEXIST\fP
Указан флаг \fBIPC_CREAT | IPC_EXCL\fP и сегмент существует.
.TP 
\fBEINVAL\fP
Был создан новый сегмент и \fIsize\fP < \fBSHMMIN\fP или \fIsize\fP >
\fBSHMMAX\fP, или новый сегмент не создан, т.к. существует сегмент с указанным
ключом, но \fIsize\fP больше размера этого сегмента.
.TP 
\fBENFILE\fP
.\" [2.6.7] shmem_zero_setup()-->shmem_file_setup()-->get_empty_filp()
Достигнуто максимальное количество открытых файлов в системе.
.TP 
\fBENOENT\fP
Не существует сегмента для ключа \fIkey\fP и флаг \fBIPC_CREAT\fP не указан.
.TP 
\fBENOMEM\fP
Не хватает памяти для выделения под перерасход сегмента.
.TP 
\fBENOSPC\fP
Все возможные идентификаторы сегментов уже распределены (\fBSHMMNI\fP) или
размер выделяемого сегмента превысит системные лимиты по общей памяти
(\fBSHMALL\fP).
.TP 
\fBEPERM\fP
Указан флаг \fBSHM_HUGETLB\fP, но у вызывающего нет прав (нет мандата
\fBCAP_IPC_LOCK\fP).
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
.\" SVr4 documents an additional error condition EEXIST.
SVr4, POSIX.1\-2001.

Флаг \fBSHM_HUGETLB\fP является непереносимым расширением Linux.
.SH ЗАМЕЧАНИЯ
.\" Like Linux, the FreeBSD man pages still document
.\" the inclusion of these header files.
Включение файлов \fI<sys/types.h>\fP и \fI<sys/ipc.h>\fP не
требуется в Linux или любых версий POSIX. Однако, некоторые старые
реализации требуют включения данных заголовочных файлов, и это также
требуется по SVID. В приложениях, которые нужно перенести на такие старые
системы, может потребоваться включить данных заголовочные файлы.

\fBIPC_PRIVATE\fP не поле флага, а тип \fIkey_t\fP. Если \fIkey\fP равно этому
значению, то системный вызов игнорирует всё кроме 9\-ти младших битов
\fIshmflg\fP и создаёт новый общий сегмента памяти (при успешном выполнении).
.PP
Ниже приведены лимиты ресурсов на общий сегмент памяти, влияющие на вызов
\fBshmget\fP():
.TP 
\fBSHMALL\fP
Максимальное количество страниц общей памяти в системе (в Linux это
ограничение можно получить и изменить через \fI/proc/sys/kernel/shmall\fP).
.TP 
\fBSHMMAX\fP
Максимальный размер общего сегмента памяти в байтах в системе: зависит от
политики (в Linux это ограничение можно получить и изменить через
\fI/proc/sys/kernel/shmmax\fP).
.TP 
\fBSHMMIN\fP
Минимальный размер общего сегмента памяти в байтах в системе: зависит от
реализации (в настоящий момент равно 1 байту, хотя на самом деле минимальный
выделяемый размер равен \fBPAGE_SIZE\fP).
.TP 
\fBSHMMNI\fP
.\" Kernels between 2.4.x and 2.6.8 had an off-by-one error that meant
.\" that we could create one more segment than SHMMNI -- MTK
.\" This /proc file is not available in Linux 2.2 and earlier -- MTK
Максимальное количество сегментов общей памяти в системе: зависит от
реализации (в настоящий момент — 4096, до Linux 2.3.99 было равно 128; в
Linux это ограничение можно получить и изменить через
\fI/proc/sys/kernel/shmmni\fP).
.PP
Реализацией не ограничивается максимальное количество общих сегментов памяти
на процесс (\fBSHMSEG\fP).
.SS "Замечания, касающиеся Linux"
В Linux до версии 2.3.30 вызов \fBshmget\fP() возвращал значение \fBEIDRM\fP, если
общий сегмент памяти был запланирован к удалению.
.SH ДЕФЕКТЫ
Имя \fBIPC_PRIVATE\fP, возможно, было выбрано неудачно, \fBIPC_NEW\fP отражает
смысл действия более ясно.
.SH "СМОТРИТЕ ТАКЖЕ"
\fBshmat\fP(2), \fBshmctl\fP(2), \fBshmdt\fP(2), \fBftok\fP(3), \fBcapabilities\fP(7),
\fBshm_overview\fP(7), \fBsvipc\fP(7)

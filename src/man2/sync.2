.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\" and Copyright (c) 2011 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified Sat Jul 24 12:02:47 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified 15 Apr 1995 by Michael Chastain <mec@shell.portal.com>:
.\"   Added reference to `bdflush(2)'.
.\" Modified 960414 by Andries Brouwer <aeb@cwi.nl>:
.\"   Added the fact that since 1.3.20 sync actually waits.
.\" Modified Tue Oct 22 22:27:07 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2001-10-10 by aeb, following Michael Kerrisk.
.\" 2011-09-07, mtk, Added syncfs() documentation,
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SYNC 2 2012\-05\-04 Linux "Руководство программиста Linux"
.SH ИМЯ
sync, syncfs \- записывает буферный кэш на диск
.SH ОБЗОР
\fB#include <unistd.h>\fP
.sp
\fBvoid sync(void);\fP
.sp
\fBint syncfs(int \fP\fIfd\fP\fB);\fP
.sp
.in -4n
Требования макроса тестирования свойств для glibc
(см. \fBfeature_test_macros\fP(7)):
.in
.sp
\fBsync\fP():
.ad l
.RS 4
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.ad
.sp
\fBsyncfs\fP():
.ad l
.RS 4
_GNU_SOURCE
.RE
.ad
.SH ОПИСАНИЕ
Вызов \fBsync\fP() приводит к записи в файловую систему всех изменений данных и
метаданных файла, хранящихся в буфере.

Вызов \fBsyncfs\fP() подобен \fBsync\fP(), но синхронизирует только файловую
систему, содержащую файл, на который указывает открытый файловый дескриптор
\fIfd\fP.
.SH "ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ"
При нормальном завершении работы \fBsyncfs\fP() возвращает 0. В случае ошибки
возвращается \-1, а \fIerrno\fP устанавливается в соответствующее значение.
.SH ОШИБКИ
Вызов \fBsync\fP() всегда выполняется без ошибок.

Вызов \fBsyncfs\fP() может завершиться с ошибкой, по крайней мере, по следующей
причине:
.TP 
\fBEBADF\fP
\fIfd\fP не является правильным файловым дескриптором.
.SH ВЕРСИИ
Системный вызов \fBsyncfs\fP() впервые появился в Linux 2.6.39; поддержка в
glibc добавлена в версии 2.14.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
\fBsync\fP(): SVr4, 4.3BSD, POSIX.1\-2001.

\fBsyncfs\fP() есть только в Linux.
.SH ЗАМЕЧАНИЯ
Начиная с glibc 2.2.2 Linux\-прототип \fBsync\fP() стал соответствовать
различным стандартам. В libc4, libc5 и glibc до версии 2.2.1, он объявлялся
как «int sync(void)» и вызов \fBsync\fP() всегда возвращал 0.
.SH ДЕФЕКТЫ
В соответствии со стандартной спецификацией (например POSIX.1\-2001),
\fBsync\fP() только планирует запись, и может закончить работу до того как
запись будет на самом деле произведена. Однако в Linux, начиная с версии
1.3.20, выполняется ожидание завершения записи (это всё равно не гарантирует
целостность данных: современные диски оснащаются большими кэшами).
.SH "СМОТРИТЕ ТАКЖЕ"
\fBbdflush\fP(2), \fBfdatasync\fP(2), \fBfsync\fP(2), \fBsync\fP(8), \fBupdate\fP(8)

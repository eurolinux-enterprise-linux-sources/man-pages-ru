.\" Copyright 2002 Walter Harms(walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright (C) 2011 Michael Kerrisk <mtk.manpages@gamil.com>
.\" Distributed under GPL
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH CACOSH 3 2011\-09\-15 "" "Руководство программиста Linux"
.SH ИМЯ
cacosh, cacoshf, cacoshl \- вычисление гиперболического арккосинуса
комплексного числа
.SH ОБЗОР
\fB#include <complex.h>\fP
.sp
\fBdouble complex cacosh(double complex \fP\fIz\fP\fB);\fP
.br
\fBfloat complex cacoshf(float complex \fP\fIz\fP\fB);\fP
.br
\fBlong double complex cacoshl(long double complex \fP\fIz\fP\fB);\fP
.sp
Компонуется при указании параметра \fI\-lm\fP.
.SH ОПИСАНИЕ
Функция \fBcacosh\fP() вычисляет гиперболический арккосинус от комплексного
числа \fIz\fP. Если \fIy\ =\ cacosh(z)\fP, то \fIz\ =\ ccosh(y)\fP. Мнимая часть \fIy\fP
лежит в интервале [\-pi,pi]. Реальная часть \fIy\fP неотрицательна.
.LP
Формула вычисления:
.nf

    cacosh(z) = 2 * clog(csqrt((z + 1) / 2) + csqrt((z \- 1) / 2))
.fi
.SH ВЕРСИИ
Эти функции впервые появились в glibc 2.1.
.SH "СООТВЕТСТВИЕ СТАНДАРТАМ"
C99.
.SH ПРИМЕР
.nf
/* Компонуется при указании параметра «\-lm» */

#include <complex.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
    double complex z, c, f;

    if (argc != 3) {
        fprintf(stderr, "Использование: %s <real> <imag>\en", argv[0]);
        exit(EXIT_FAILURE);
    }

    z = atof(argv[1]) + atof(argv[2]) * I;

    c = cacosh(z);
    printf("cacosh() = %6.3f %6.3f*i\en", creal(c), cimag(c));

    f = 2 * clog(csqrt((z + 1)/2) + csqrt((z \- 1)/2));
    printf("formula  = %6.3f %6.3f*i\en", creal(f2), cimag(f2));

    exit(EXIT_SUCCESS);
}
.fi
.SH "СМОТРИТЕ ТАКЖЕ"
\fBacosh\fP(3), \fBcabs\fP(3), \fBccosh\fP(3), \fBcimag\fP(3), \fBcomplex\fP(7)

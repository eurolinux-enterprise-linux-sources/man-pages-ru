.\" This is in the public domain
.\" 
.\" Дата последней коррекции перевода 08.02.2004
.\" Перевод с английского сделал Виктор Вислобоков <corochoone@perm.ru>
.\" http://www.linuxshare.ru/projects/man/
.\"
.TH LD.SO 8 2001-12-16 "" "Linux Programmer's Manual"
.SH ИМЯ
ld.so, ld-linux.so* \- динамический связыватель/загрузчик
.SH ОБЗОР
Программы
.B ld.so
и
.B ld-linux.so*
ищут и загружают динамические библиотеки, необходимые программам,
а также подготавливают программы к запуску и запускают их.
.LP
Бинарные файлы Linux требуют динамического связывания (связывания
в момент запуска) за исключением тех, что во время компиляции
были собраны с опцией
.B \-static
заданной для
.B ld .
.LP
Программа
.B ld.so
управляет бинарными файлами в формате a.out, который используется очень
давно; программа
.B ld-linux.so*
управляет файлами в формате ELF (\fB/lib/ld-linux.so.1\fP для libc5,
\fB/lib/ld-linux.so.2\fP для glibc2), который используется в течении
нескольких лет и в данный момент. Обе программы ведут себя одинаково
и используют те же самые файлы поддержки, а также программы
.BR ldd (1),
.BR ldconfig (8)
и
.IR /etc/ld.so.conf .
.LP
Динамические библиотеки, необходимые программе ищутся в нескольких местах:
.IP o
(только для ELF) Используя атрибут DT_RPATH динамической секции бинарного
файла, если он есть и если атрибут DT_RUNPATH не существует.
Использование DT_RPATH является устаревшей стратегией.
.IP o
Используя переменную окружения
.BR LD_LIBRARY_PATH .
За исключением случая, когда исполняется бинарный файл с setuid/setgid битом,
так как в этом случае она игнорируется.
.IP o
(только для ELF) Используя атрибут DT_RUNPATH динамической секции бинарного
файла, если он есть.
.IP o
Из кэш-файла
.BR /etc/ld.so.cache ,
который содержит скомпилированный список библиотек-кандидатов, которые
ранее были найдены по указанным путям расположения библиотек. Однако,
если бинарный файл был связан с опцией компановщика
.B -z nodeflib ,
библиотеки в путях по умолчанию, будут пропущены.
.IP o
В путях по умолчанию
.BR /lib ,
и
.BR /usr/lib .
Если бианрный файл был связан с опцией компановщика
.B -z nodeflib ,
данный шаг будет пропущен.
.SH ОБЗОР
Динамический связыватель (компановщик) может быть запущен или опосредовано
через запуск некоторых программ динамического связывания или библиотек
(в этом случае компановщику не могут быть переданы опции командной строки,
в случае ELF, компановщик сохраняется в секции
.B .interp
запускаемой программы) или непосредственно через запуск:
.P
.B /lib/ld-linux.so.*
[ОПЦИИ] [ПРОГРАММА [АРГУМЕНТЫ]]
.SH "ОПЦИИ КОМАНДНОЙ СТРОКИ"
.TP
.B --list
Выдать список всех зависимостей и как они удовлетворяются.
.TP
.B --verify
Проверить, что программа является динамически связанной и что компановщик
может ей управлять.
.TP
.B --library-path PATH
Перекрыть установки в переменной окружения
.B LD_LIBRARY_PATH
(см. ниже).
.TP
.B --ignore-rpath LIST
Игнорировать информацию в RPATH и RUNPATH в именах объетов в LIST.
Данная опция поддерживалась glibc2 буквально один час.
Затем она была переименована в:
.TP
.B --inhibit-rpath LIST
.SH ОКРУЖЕНИЕ
Существует четыре важные переменные окружения.
.TP
.B LD_LIBRARY_PATH
Список разделённых двоеточием каталогов, в которых производится поиск
ELF библиотек в момент выполнения.
Похоже на переменную окружения
.B PATH .
.TP
.B LD_PRELOAD
Заданный пользователем список дополнительных динамических ELF библиотек,
разделённых пробелами, которые будут загружены перед всеми другими.
Это можно использовать для выборочного перекрытия функций в других
динамических библиотеках. Для бинарных файлов setuid/setgid, будут
загружены только библиотеки в стандартных каталогах поиска и которые
также имеют setuid.
.TP
.B LD_BIND_NOW
(libc5; glibc с версии 2.1.1)
Если переменная содержит непустую строку, то компановщик будет искать
все символы в запускаемой программе, вместо того, чтобы отложить поиск
вызовов функций до момента, когда они встретятся в первый раз.
Это полезно использовать при отладке.
.TP
.B LD_TRACE_LOADED_OBJECTS
(только для ELF)
Если переменная содержит непустую строку, то программа вместо нормального
запуска выдаст свои зависимости по динамическим библиотекам, как если
бы она была запущена через
.BR ldd (1).
.LP
Далее, существует большое количество более или менее значительных
переменных, многие из которых устарели или предназначены только для
внутреннего использования.
.TP
.B LD_WARN
(только для ELF)(glibc с версии 2.1.3)
Если переменная содержит непустую строку, будут выданы предупреждения
о ненайденных символах.
.TP
.B LD_NOWARN
(только a.out)(libc5)
Подавлять предупреждения о бибилиотеках a.out с несовместимыми номерами
версий.
.TP
.B LD_BIND_NOT
(glibc начиная с 2.1.95)
Не обновлять GOT (global offset table - глобальную таблицу смещений) и
PLT (procedure linkage table - таблицу процедурных связываний)
после нахождения символа.
.TP
.B LD_DEBUG
(glibc начаная с 2.1)
Выводить подробную отладочную информацию о компановщике.
Если установлена в значение
.B all ,
то выдает всю имеющуюся отладочную информацию, если установлена в
.B help ,
то выдает вспомогательные сообщения о некоторых категориях, которые
могут быть указаны в этой переменной окружения.
.TP
.B LD_DEBUG_OUTPUT
(glibc начиная с 2.1)
Файл куда будет записываться вывод
.B LD_DEBUG :
по умолчанию это стандартный вывод. LD_DEBUG_OUTPUT игнорируется для
бинарных файлов setuid/setgid.
.TP
.B LD_VERBOSE
(glibc начиная с 2.1)
Если переменная содержит непустую строку, будет выводиться информация о
версиях символов в программе, если выбран режим запроса информации
о программе (т.е. или задана переменная
.B LD_TRACE_LOADED_OBJECTS
или для компановщика заданы опции
.B --list
и
.B --verify ).
.TP
.B LD_PROFILE
(glibc начиная с 2.1)
Динамический объект для профилирования.
.TP
.B LD_PROFILE_OUTPUT
(glibc начиная с 2.1)
Файл, куда будет сохраняться вывод для
.B LD_PROFILE :
по умолчанию это стандартный вывод.
LD_DEBUG_OUTPUT игнорируется для бинарных файлов setuid/setgid.
.TP
.B LD_AOUT_LIBRARY_PATH
(libc5)
Версия LD_LIBRARY_PATH только для бинарных файлов формата a.out.
Старые версии ld-linux.so.1 также поддерживают LD_ELF_LIBRARY_PATH.
.TP
.B LD_AOUT_PRELOAD
(libc5)
Версия LD_PRELOAD только для бинарных файлов формата a.out.
Старые версии ld-linux.so.1 также поддерживают LD_ELF_PRELOAD.
.TP
.B LD_SHOW_AUXV
(glibc начиная с 2.1)
Показывать вспомогательный массив, передаваемый из ядра.
.TP
.B LD_HWCAP_MASK
(glibc начиная 2.1)
Маска для совместимости с аппаратными возможностями.
.TP
.B LD_ORIGIN_PATH
(glibc начиная 2.1)
Путь, где находится библиотека (для не-setuid программ).
.TP
.B LD_DYNAMIC_WEAK
(glibc начиная с 2.1.91)
Разрешает перекрытие слабых символов (возвращая к поведению
старой glibc).
.TP
.B LD_KEEPDIR
(только для a.out)(libc5)
Не игнорировать каталог для загрузки в именах a.out библиотек.
Использование этой опции очень не рекомендуется.
.TP
.B LDD_ARGV0
(libc5)
.IR argv [0]
для использования
.BR ldd (1),
когда он не задан.
.SH ФАЙЛЫ
.PD 0
.TP
.B /lib/ld.so
динамический связыватель/загрузчик для формата a.out
.TP
.BR /lib/ld-linux.so. { 1 , 2 }
динамический связыватель/загрузчик для формата ELF
.TP
.B /etc/ld.so.cache
Файл, содержащий скомпилированный список каталогов, в которых производится
поиск библиотек и сортированный список библиотек-кандидатов.
.TP
.B /etc/ld.so.preload
Файл, содержащий список разделённых пробелами динамических ELF библиотек,
которые будут загружены перед программой.
.TP
.B lib*.so*
динамические библиотеки
.PD
.SH ЗАМЕЧАНИЯ
Функциональность
.B ld.so
доступна для исполняемых программ, скомпилированных с использованием
libc версии 4.4.3 или выше. Функциональность ELF доступна начиная с
Linux 1.1.52 и libc5.
.SH "СМОТРИ ТАКЖЕ"
.BR ldd (1),
.BR ldconfig (8)
.\" .SH AUTHORS
.\" ld.so: David Engel, Eric Youngdale, Peter MacDonald, Hongjiu Lu, Linus
.\"  Torvalds, Lars Wirzenius and Mitch D'Souza
.\" ld-linux.so: Roland McGrath, Ulrich Drepper and others.
.\"
.\" In the above, (libc5) stands for David Engel's ld.so/ld-linux.so.
.SH ПЕРЕВОД
Перевёл с английского Виктор Вислобоков <corochoone@perm.ru> 2003
